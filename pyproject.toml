[build-system]
requires = ["setuptools", "Cython; python_implementation == 'CPython'"]
build-backend = "setuptools.build_meta"

[project]
name = "Logbook"
license = { text = "BSD-3-Clause" }
authors = [
    { name = "Armin Ronacher", email = "armin.ronacher@active-4.com" },
    { name = "Georg Brandl" },
]
description = "A logging replacement for Python"
readme = "README.md"
maintainers = [
    { name = "Frazer McLean", email = "frazer@frazermclean.co.uk" },
]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.9"
dynamic = ["version"]

[project.urls]
Documentation = "https://logbook.readthedocs.io"
"Source Code" = "https://github.com/getlogbook/logbook"

[project.optional-dependencies]
all = ["Logbook[brotli,execnet,jinja,nteventlog,redis,sqlalchemy,zmq]"]
brotli = ["brotli>=1.0.1"]
compression = ["Logbook[brotli]"] # Deprecated: use brotli extra directly
execnet = ["execnet>=1.5"]
jinja = ["Jinja2>=2.11.3"]
nteventlog = [
    "pywin32>=225; sys_platform == 'win32' and python_version=='3.9'",
    "pywin32>=302; sys_platform == 'win32' and python_version=='3.10'",
    "pywin32>=303; sys_platform == 'win32' and python_version=='3.11'",
    "pywin32>=306; sys_platform == 'win32' and python_version=='3.12'",
    "pywin32>=307; sys_platform == 'win32' and python_version>='3.13'",
]
redis = ["redis>=3.5.3"]
sqlalchemy = ["sqlalchemy>=1.4"]
zmq = ["pyzmq>=26"]

[dependency-groups]
dev = [
    { include-group = "nox" },
    "gevent>=25.5.1",
    "pytest>=8.4.0",
    "pytest-rerunfailures>=15.1",
]
docs = [
    "sphinx>=7.4.7",
]
nox = [
    "nox>=2025.5.1",
]

[tool.setuptools.dynamic]
version = { attr = "logbook.__version__.__version__" }

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.isort]
profile = "black"

[tool.cibuildwheel.macos]
archs = ["x86_64", "universal2", "arm64"]

[tool.uv]
cache-keys = [
    { file = "pyproject.toml" },
    { file = "setup.py" },
    { file = "src/logbook/__version__.py" },
    { file = "src/cython/*.pyx" },
    { env = "DISABLE_LOGBOOK_CEXT" },
]
required-environments = [
    "sys_platform == 'linux' and platform_machine == 'x86_64'",
    "sys_platform == 'linux' and platform_machine == 'aarch64'",
    "sys_platform == 'darwin' and platform_machine == 'x86_64'",
    "sys_platform == 'darwin' and platform_machine == 'arm64'",
    "sys_platform == 'win32' and platform_machine == 'x86'",
    "sys_platform == 'win32' and platform_machine == 'AMD64'",
    "sys_platform == 'win32' and platform_machine == 'arm64'",
]
required-version = ">=0.7.14" # https://github.com/astral-sh/uv/pull/14041
